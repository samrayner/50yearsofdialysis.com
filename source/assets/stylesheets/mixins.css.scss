@mixin desaturate($amount: 100%) {
  -webkit-transform: translateZ(0);
  -webkit-filter: grayscale($amount);
  -moz-filter: grayscale($amount);
  -ms-filter: grayscale($amount);
  -o-filter: grayscale($amount);
  filter: grayscale($amount);
}

@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin responsive($property, $lg, $md: nil, $sm: nil, $xs: nil) {
  #{$property}: $lg;
  @if $md != nil {
    @media (max-width: $screen-md-max) { #{$property}: $md; }
  }
  @if $sm != nil {
    @media (max-width: $screen-sm-max) { #{$property}: $sm; }
  }
  @if $xs != nil {
    @media (max-width: $screen-xs-max) { #{$property}: $xs; }
  }
}

@mixin gutter-padding($row-padding, $col-padding) {
  padding: 0 $row-padding;

  > [class^=col-] {
    padding-left: $col-padding;
    padding-right: $col-padding;
  }
}
